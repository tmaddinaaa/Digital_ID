import React, { useState } from "react";

const BankProductsPage = ({ data }) => {
  const [expanded, setExpanded] = useState({
    credits: false,
    deposits: false,
    cards: false,
    mlIndicators: false,
    history: false,
  });

  if (!data?.products?.bankProducts)
    return <p className="text-gray-500">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö –±–∞–Ω–∫–∞</p>;

  const { items = [], history = [] } = data.products.bankProducts;
  const ml = data.products?.mlIndicators || {};

  // –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ —Ç–∏–ø–∞–º
  const credits = items.filter((p) => p.type === "–ö—Ä–µ–¥–∏—Ç");
  const deposits = items.filter((p) => p.type === "–î–µ–ø–æ–∑–∏—Ç");
  const cards = items.filter((p) => p.type === "–ö–∞—Ä—Ç–∞");

  const toggleExpand = (section) =>
    setExpanded((prev) => ({ ...prev, [section]: !prev[section] }));

  // –ü–æ–¥—Å—á—ë—Ç totals
  const totalCards = cards.length;
  const totalDeposits = deposits.length;
  const totalCredits = credits.length;
  const totalCardSum = cards.reduce((acc, c) => acc + (c.sum || 0), 0);
  const totalDepositSum = deposits.reduce((acc, d) => acc + (d.sum || 0), 0);
  const totalCreditSum = credits.reduce((acc, c) => acc + (c.sum || 0), 0);

  // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–≤–µ—Ç–∞ –±–æ–Ω—É—Å–∞
  const getBonusColor = (bonusLevel) => {
    if (!bonusLevel) return "bg-gray-100 text-gray-600";
    const num = parseFloat(bonusLevel);
    if (num >= 10) return "bg-yellow-200 text-yellow-900";
    if (num >= 5) return "bg-green-100 text-green-700";
    return "bg-gray-50 text-gray-600";
  };

  return (
    <div className="bg-white shadow rounded-2xl p-6 space-y-6 overflow-auto">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="flex justify-between items-center">
        <h2 className="text-xl font-semibold text-gray-800">üè¶ –ü—Ä–æ–¥—É–∫—Ç—ã –ë–∞–Ω–∫–∞</h2>
      </div>

      {/* –ö—Ä–∞—Ç–∫–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
      <div className="grid grid-cols-1 sm:grid-cols-3 gap-4 text-gray-700">
        <div className="bg-gray-50 p-4 rounded-xl text-center">
          <p className="font-semibold text-lg">{totalCards}</p>
          <p className="text-sm text-gray-500">–ö–∞—Ä—Ç—ã</p>
          <p className="text-sm text-gray-600">‚Ç∏{totalCardSum.toLocaleString()}</p>
        </div>
        <div className="bg-gray-50 p-4 rounded-xl text-center">
          <p className="font-semibold text-lg">{totalDeposits}</p>
          <p className="text-sm text-gray-500">–î–µ–ø–æ–∑–∏—Ç—ã</p>
          <p className="text-sm text-gray-600">‚Ç∏{totalDepositSum.toLocaleString()}</p>
        </div>
        <div className="bg-gray-50 p-4 rounded-xl text-center">
          <p className="font-semibold text-lg">{totalCredits}</p>
          <p className="text-sm text-gray-500">–ö—Ä–µ–¥–∏—Ç—ã</p>
          <p className="text-sm text-gray-600">‚Ç∏{totalCreditSum.toLocaleString()}</p>
        </div>
      </div>

      {/* üí∞ –ö—Ä–µ–¥–∏—Ç—ã */}
      <div className="border rounded-xl overflow-hidden">
        <button
          onClick={() => toggleExpand("credits")}
          className="w-full text-left bg-gray-100 px-4 py-3 font-semibold text-gray-800 flex justify-between items-center hover:bg-gray-200"
        >
          <span>üí∞ –ö—Ä–µ–¥–∏—Ç—ã</span>
          <span>{expanded.credits ? "‚ñ≤" : "‚ñº"}</span>
        </button>
        {expanded.credits && (
          <div className="max-h-96 overflow-y-auto p-4">
            {credits.length ? (
              <table className="w-full border-collapse text-sm">
                <thead className="bg-gray-50 sticky top-0">
                  <tr>
                    <th className="p-2 text-left">–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                    <th className="p-2 text-left">–°—É–º–º–∞</th>
                    <th className="p-2 text-left">–°—Ä–æ–∫</th>
                    <th className="p-2 text-left">–ü—Ä–æ—Ü–µ–Ω—Ç</th>
                    <th className="p-2 text-left">–î–∞—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è</th>
                    <th className="p-2 text-left">–°—Ç–∞—Ç—É—Å</th>
                    <th className="p-2 text-left">–ü—Ä–æ—Å—Ä–æ—á–∫–∞</th>
                  </tr>
                </thead>
                <tbody>
                  {credits.map((c, i) => (
                    <tr key={i} className="border-t hover:bg-gray-50">
                      <td className="p-2">{c.name}</td>
                      <td className="p-2">‚Ç∏{c.sum.toLocaleString()}</td>
                      <td className="p-2">{c.term}</td>
                      <td className="p-2">{c.interestRate}</td>
                      <td className="p-2">{c.openDate}</td>
                      <td className="p-2">{c.status}</td>
                      <td className="p-2">
                        {c.overdue
                          ? `–î–∞ (${c.overdueSum?.toLocaleString()} ‚Ç∏)`
                          : "–ù–µ—Ç"}
                      </td>
                    </tr>
                  ))}
                </tbody>
              </table>
            ) : (
              <p className="text-gray-500 text-sm">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤</p>
            )}
          </div>
        )}
      </div>

      {/* üíé –î–µ–ø–æ–∑–∏—Ç—ã */}
      <div className="border rounded-xl overflow-hidden">
        <button
          onClick={() => toggleExpand("deposits")}
          className="w-full text-left bg-gray-100 px-4 py-3 font-semibold text-gray-800 flex justify-between items-center hover:bg-gray-200"
        >
          <span>üíé –î–µ–ø–æ–∑–∏—Ç—ã</span>
          <span>{expanded.deposits ? "‚ñ≤" : "‚ñº"}</span>
        </button>
        {expanded.deposits && (
          <div className="max-h-96 overflow-y-auto p-4">
            {deposits.length ? (
              <table className="w-full border-collapse text-sm">
                <thead className="bg-gray-50 sticky top-0">
                  <tr>
                    <th className="p-2 text-left">–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                    <th className="p-2 text-left">–°—É–º–º–∞</th>
                    <th className="p-2 text-left">–°—Ä–æ–∫</th>
                    <th className="p-2 text-left">–ü—Ä–æ—Ü–µ–Ω—Ç</th>
                    <th className="p-2 text-left">–°—Ç–∞—Ç—É—Å</th>
                  </tr>
                </thead>
                <tbody>
                  {deposits.map((d, i) => (
                    <tr key={i} className="border-t hover:bg-gray-50">
                      <td className="p-2">{d.name}</td>
                      <td className="p-2">‚Ç∏{d.sum.toLocaleString()}</td>
                      <td className="p-2">{d.term}</td>
                      <td className="p-2">{d.interestRate}</td>
                      <td className="p-2">{d.status}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            ) : (
              <p className="text-gray-500 text-sm">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –¥–µ–ø–æ–∑–∏—Ç–æ–≤</p>
            )}
          </div>
        )}
      </div>

      {/* üí≥ –ö–∞—Ä—Ç—ã */}
      <div className="border rounded-xl overflow-hidden">
        <button
          onClick={() => toggleExpand("cards")}
          className="w-full text-left bg-gray-100 px-4 py-3 font-semibold text-gray-800 flex justify-between items-center hover:bg-gray-200"
        >
          <span>üí≥ –ö–∞—Ä—Ç—ã</span>
          <span>{expanded.cards ? "‚ñ≤" : "‚ñº"}</span>
        </button>

        {expanded.cards && (
          <div className="max-h-96 overflow-y-auto p-4">
            {cards.length ? (
              <table className="w-full border-collapse text-sm">
                <thead className="bg-gray-50 sticky top-0">
                  <tr>
                    <th className="p-2 text-left">–¢–∏–ø</th>
                    <th className="p-2 text-left">–£—Ä–æ–≤–µ–Ω—å</th>
                    <th className="p-2 text-left">–ö–∞—Ç–µ–≥–æ—Ä–∏—è</th>
                    <th className="p-2 text-left">–£—Ä–æ–≤–µ–Ω—å –±–æ–Ω—É—Å–∞</th>
                    <th className="p-2 text-left">–î–∞—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è</th>
                    <th className="p-2 text-left">–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ</th>
                    <th className="p-2 text-left">–°—É–º–º–∞</th>
                    <th className="p-2 text-left">–ó–∞—Ä–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–µ–∫—Ç</th>
                    <th className="p-2 text-left">–°—Ç–∞—Ç—É—Å</th>
                  </tr>
                </thead>
                <tbody>
                  {cards.map((c, i) => (
                    <tr key={i} className="border-t hover:bg-gray-50">
                      <td className="p-2">{c.cardType}</td>
                      <td className="p-2">{c.level}</td>
                      <td className="p-2">{c.category || "‚Äî"}</td>
                      <td className="p-2">
                        <span
                          className={`px-2 py-1 rounded-lg text-xs font-semibold ${getBonusColor(
                            c.bonusLevel
                          )}`}
                        >
                          {c.bonusLevel || "‚Äî"}
                        </span>
                      </td>
                      <td className="p-2">{c.openDate}</td>
                      <td className="p-2">{c.validUntil}</td>
                      <td className="p-2">‚Ç∏{c.sum.toLocaleString()}</td>
                      <td className="p-2">
                        {c.isSalaryCard ? (
                          <span className="text-green-600 font-medium">–î–∞</span>
                        ) : (
                          <span className="text-gray-400">–ù–µ—Ç</span>
                        )}
                      </td>
                      <td className="p-2">{c.status}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            ) : (
              <p className="text-gray-500 text-sm">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞—Ä—Ç</p>
            )}
          </div>
        )}
      </div>

      {/* ü§ñ ML Indicators */}
      <div className="border rounded-xl overflow-hidden">
        <button
          onClick={() => toggleExpand("mlIndicators")}
          className="w-full text-left bg-gray-100 px-4 py-3 font-semibold text-gray-800 flex justify-between items-center hover:bg-gray-200"
        >
          <span>ü§ñ ML-–ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏</span>
          <span>{expanded.mlIndicators ? "‚ñ≤" : "‚ñº"}</span>
        </button>

        {expanded.mlIndicators && (
          <div className="p-5 bg-gradient-to-r from-gray-50 to-white shadow-inner">
            <div className="grid grid-cols-1 sm:grid-cols-3 gap-4">
              <div
                className={`p-4 rounded-xl text-center ${
                  ml.churnRisk === "–î–∞"
                    ? "bg-red-100 text-red-700"
                    : "bg-green-50 text-green-700"
                }`}
              >
                <p className="font-semibold text-sm">–°–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ –æ—Ç—Ç–æ–∫—É</p>
                <p className="text-lg font-bold">{ml.churnRisk || "‚Äî"}</p>
              </div>
              <div
                className={`p-4 rounded-xl text-center ${
                  ml.creditInterest === "–î–∞"
                    ? "bg-yellow-100 text-yellow-800"
                    : "bg-gray-100 text-gray-500"
                }`}
              >
                <p className="font-semibold text-sm">–°–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ –∫—Ä–µ–¥–∏—Ç–∞–º</p>
                <p className="text-lg font-bold">{ml.creditInterest || "‚Äî"}</p>
              </div>
              <div
                className={`p-4 rounded-xl text-center ${
                  ml.depositInterest === "–î–∞"
                    ? "bg-blue-100 text-blue-800"
                    : "bg-gray-100 text-gray-500"
                }`}
              >
                <p className="font-semibold text-sm">–°–∫–ª–æ–Ω–Ω–æ—Å—Ç—å –∫ –¥–µ–ø–æ–∑–∏—Ç—É</p>
                <p className="text-lg font-bold">{ml.depositInterest || "‚Äî"}</p>
              </div>
            </div>
          </div>
        )}
      </div>

      {/* üìú –ò—Å—Ç–æ—Ä–∏—è */}
      <div className="border rounded-xl overflow-hidden">
        <button
          onClick={() => toggleExpand("history")}
          className="w-full text-left bg-gray-100 px-4 py-3 font-semibold text-gray-800 flex justify-between items-center hover:bg-gray-200"
        >
          <span>üìú –ò—Å—Ç–æ—Ä–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤</span>
          <span>{expanded.history ? "‚ñ≤" : "‚ñº"}</span>
        </button>
        {expanded.history && (
          <div className="max-h-96 overflow-y-auto p-4">
            {history.length ? (
              <table className="w-full border-collapse text-sm">
                <thead className="bg-gray-50 sticky top-0">
                  <tr>
                    <th className="p-2 text-left">–¢–∏–ø</th>
                    <th className="p-2 text-left">–ù–∞–∑–≤–∞–Ω–∏–µ</th>
                    <th className="p-2 text-left">–°—É–º–º–∞</th>
                    <th className="p-2 text-left">–î–∞—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è</th>
                    <th className="p-2 text-left">–î–∞—Ç–∞ –∑–∞–∫—Ä—ã—Ç–∏—è</th>
                    <th className="p-2 text-left">–°—Ç–∞—Ç—É—Å</th>
                  </tr>
                </thead>
                <tbody>
                  {history.map((h, i) => (
                    <tr key={i} className="border-t hover:bg-gray-50">
                      <td className="p-2">{h.type}</td>
                      <td className="p-2">{h.name || h.cardType}</td>
                      <td className="p-2">
                        {h.sum ? `‚Ç∏${h.sum.toLocaleString()}` : "‚Äî"}
                      </td>
                      <td className="p-2">{h.openDate || "‚Äî"}</td>
                      <td className="p-2">{h.closeDate || "‚Äî"}</td>
                      <td className="p-2">{h.status}</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            ) : (
              <p className="text-gray-500 text-sm">–ò—Å—Ç–æ—Ä–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</p>
            )}
          </div>
        )}
      </div>
    </div>
  );
};

export default BankProductsPage;

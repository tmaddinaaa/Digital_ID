import React from "react";

const Communications = ({ data }) => {
  if (!data) return <p className="text-gray-500">–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –æ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è—Ö</p>;

  const {
    pushStatus,
    campaigns,
    lastPush,
    history,
    frequency,
    conversion,
    insights,
    topPush,
    heatmap,
  } = data;

  const days = Object.keys(heatmap?.data || {});
  const hours = Array.from({ length: 24 }, (_, i) => i);
  const maxVal = Math.max(1, ...Object.values(heatmap?.data || {}).flat());

  return (
    <div className="bg-white rounded-xl shadow p-6 space-y-6">
      <h2 className="text-xl font-semibold text-gray-800 flex items-center gap-2">
        üì© –ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏ —Å –∫–ª–∏–µ–Ω—Ç–æ–º
      </h2>

      {/* –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–ª–∞–≥–∏ */}
      <div className="grid grid-cols-1 sm:grid-cols-2 gap-4">
        <div className="bg-gray-50 p-4 rounded-xl space-y-2 text-gray-700">
          <p>
            <strong>–û—Ç–∫–ª—é—á–∏–ª push:</strong>{" "}
            <span
              className={
                pushStatus === "–î–∞" ? "text-red-600" : "text-green-600"
              }
            >
              {pushStatus || "‚Äî"}
            </span>
          </p>
          <p>
            <strong>–ù–µ –ø–æ–ª—É—á–∞–ª –∫–∞–º–ø–∞–Ω–∏–∏ –∑–∞ –º–µ—Å—è—Ü:</strong>{" "}
            <span
              className={
                campaigns === "–î–∞" ? "text-red-600" : "text-green-600"
              }
            >
              {campaigns || "‚Äî"}
            </span>
          </p>
        </div>

        <div className="bg-gray-50 p-4 rounded-xl space-y-2 text-gray-700">
          <p>
            <strong>–ü–æ—Å–ª–µ–¥–Ω–∏–π push:</strong> {lastPush?.date} ‚Äî {lastPush?.text} (
            {lastPush?.status})
          </p>
          <p>
            <strong>–¢–µ–º–∞:</strong> {lastPush?.topic || "‚Äî"}
          </p>
        </div>
      </div>

      {/* –ú–µ—Ç—Ä–∏–∫–∏ */}
      <div className="bg-gray-50 p-4 rounded-xl">
        <h3 className="font-semibold text-gray-800 mb-2">
          üìä –ß–∞—Å—Ç–æ—Ç–∞ –∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
        </h3>
        <div className="grid grid-cols-2 sm:grid-cols-3 gap-2 text-gray-700 text-sm">
          <p>
            <strong>–°—Ä–µ–¥–Ω–µ–¥–Ω–µ–≤–Ω–æ–µ:</strong> {frequency?.daily || "‚Äî"}
          </p>
          <p>
            <strong>–°—Ä–µ–¥–Ω–µ–Ω–µ–¥–µ–ª—å–Ω–æ–µ:</strong> {frequency?.weekly || "‚Äî"}
          </p>
          <p>
            <strong>–°—Ä–µ–¥–Ω–µ–º–µ—Å—è—á–Ω–æ–µ:</strong> {frequency?.monthly || "‚Äî"}
          </p>
          <p>
            <strong>–ò–Ω—Ç–µ—Ä–≤–∞–ª:</strong> {frequency?.interval || "‚Äî"}
          </p>
          <p>
            <strong>–ö–æ–Ω–≤–µ—Ä—Å–∏—è (OR):</strong> {conversion?.overall || "‚Äî"}
          </p>
          <p>
            <strong>Click rate (CTR):</strong> {conversion?.clickRate || "‚Äî"}
          </p>
        </div>
      </div>

      {/* üî• –¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ */}
      <div className="bg-gray-50 p-4 rounded-xl">
        <h3 className="font-semibold text-gray-800 mb-3 text-center">
          üî• –¢–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        </h3>

        {days.length ? (
          <div className="overflow-x-auto flex justify-center">
            <div
              className="inline-grid justify-items-center"
              style={{
                gridTemplateColumns: `repeat(${
                  hours.length + 1
                }, minmax(2rem, 1fr))`,
              }}
            >
              {/* –ó–∞–≥–æ–ª–æ–≤–∫–∏ —á–∞—Å–æ–≤ */}
              <div></div>
              {hours.map((h) => (
                <div
                  key={h}
                  className="text-[10px] text-gray-500 text-center w-5"
                >
                  {h}
                </div>
              ))}

              {/* –°—Ç—Ä–æ–∫–∏ –ø–æ –¥–Ω—è–º */}
              {days.map((day) => (
                <React.Fragment key={day}>
                  <div className="text-xs text-gray-600 font-medium pr-2">
                    {day.slice(0, 3)}
                  </div>
                  {heatmap.data[day].map((val, i) => {
                    const intensity = val / maxVal;
                    const bg = `rgba(255, 193, 7, ${intensity})`;
                    return (
                      <div
                        key={i}
                        title={`${val} –ø—É—à–µ–π`}
                        className="h-5 w-5 rounded-sm text-[9px] text-center transition-all duration-200 hover:scale-110 hover:ring-1 hover:ring-yellow-400"
                        style={{
                          background: bg,
                          color: intensity > 0.6 ? "white" : "#222",
                        }}
                      >
                        {val > 0 ? val : ""}
                      </div>
                    );
                  })}
                </React.Fragment>
              ))}
            </div>
          </div>
        ) : (
          <p className="text-gray-500 text-sm text-center">
            –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
          </p>
        )}
      </div>

      {/* –ò—Å—Ç–æ—Ä–∏—è –ø—É—à–µ–π */}
      <div>
        <h3 className="font-semibold text-gray-800 mb-2">
          üïì –ò—Å—Ç–æ—Ä–∏—è push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        </h3>
        {history?.length ? (
          <table className="w-full text-sm border-collapse">
            <thead className="bg-gray-50">
              <tr>
                <th className="p-2 text-left">–î–∞—Ç–∞</th>
                <th className="p-2 text-left">–ö–∞–º–ø–∞–Ω–∏—è</th>
                <th className="p-2 text-left">–¢–µ–∫—Å—Ç</th>
                <th className="p-2 text-left">–°—Ç–∞—Ç—É—Å</th>
              </tr>
            </thead>
            <tbody>
              {history.map((h, i) => (
                <tr key={i} className="border-t hover:bg-gray-50">
                  <td className="p-2">{h.date}</td>
                  <td className="p-2">{h.campaign}</td>
                  <td className="p-2">{h.text}</td>
                  <td className="p-2">{h.status}</td>
                </tr>
              ))}
            </tbody>
          </table>
        ) : (
          <p className="text-gray-500 text-sm">–ò—Å—Ç–æ—Ä–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç</p>
        )}
      </div>

      {/* –ò–Ω—Å–∞–π—Ç—ã */}
      <div className="bg-yellow-50 border border-yellow-200 rounded-xl p-4">
        <h3 className="font-semibold text-yellow-800 mb-2">üí° –ò–Ω—Å–∞–π—Ç—ã</h3>
        <ul className="list-disc list-inside text-gray-700 space-y-1 text-sm">
          {insights?.topics && (
            <li>
              –†–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ —Ç–µ–º—ã:{" "}
              <span className="font-medium">{insights.topics}</span>
            </li>
          )}
          {topPush && (
            <li>
              –¢–æ–ø push:{" "}
              <span className="font-medium">{topPush.text}</span> ‚Äî OR:{" "}
              {topPush.or}, CTR: {topPush.ctr}
            </li>
          )}
        </ul>
      </div>
    </div>
  );
};

export default Communications;

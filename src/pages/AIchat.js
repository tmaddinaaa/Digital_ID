// src/pages/AIChat.js
import React, { useState } from "react";
import { Card, CardContent } from "../components/ui/card";
import { Input } from "../components/ui/input";
import { Button } from "../components/ui/button";
import { SendHorizonal, Loader2 } from "lucide-react";
import {
  ResponsiveContainer,
  LineChart,
  Line,
  XAxis,
  YAxis,
  Tooltip,
  BarChart,
  Bar,
} from "recharts";

/**
 * AIChat ‚Äî –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –≤–µ—Ä—Å–∏—è –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞.
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç:
 * - –∑–∞–ø—Ä–æ—Å—ã –ø–æ –ò–ò–ù (12 —Ü–∏—Ñ—Ä) => –∏—â–µ—Ç —á–µ—Ä–µ–∑ /api/profiles?iin=...
 * - RFM / –¥–µ–ø–æ–∑–∏—Ç—ã / –≤—ã—Ä—É—á–∫–∞ / –∏–Ω—Å–∞–π—Ç—ã
 * - —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –æ—Ç–≤–µ—Ç—ã + –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ (line / bar)
 *
 * –ï—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–π –º–æ–∫.
 */

function TextBubble({ sender, text }) {
  return (
    <div className={`flex ${sender === "user" ? "justify-end" : "justify-start"}`}>
      <div
        className={`p-3 rounded-2xl max-w-[75%] whitespace-pre-line ${
          sender === "user"
            ? "bg-[#FFB800] text-white rounded-br-none"
            : "bg-gray-100 text-gray-900 rounded-bl-none"
        }`}
      >
        {text}
      </div>
    </div>
  );
}

const formatCurrency = (v) =>
  typeof v === "number" ? v.toLocaleString("ru-RU") + " ‚Ç∏" : v;

export default function AIChat() {
  const [input, setInput] = useState("");
  const [messages, setMessages] = useState([
    {
      sender: "ai",
      text:
        "–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –±–∞–Ω–∫–æ–≤—Å–∫–∏–π –∞–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –ú–æ–≥—É –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ –ò–ò–ù (12 —Ü–∏—Ñ—Ä), –¥–∏–Ω–∞–º–∏–∫—É –¥–µ–ø–æ–∑–∏—Ç–æ–≤/—Ä–∞—Å—Ö–æ–¥–æ–≤, RFM-—Ä–∞–∑–±–∏–≤–∫—É –∏ –¥–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏. –ü—Ä–∏–º–µ—Ä: \"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ò–ò–ù \" –∏–ª–∏ \"–ü–æ–∫–∞–∂–∏ —Ä–æ—Å—Ç –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –∑–∞ –≥–æ–¥\".",
    },
  ]);

  const [vizType, setVizType] = useState(null); // "line" | "bar" | null
  const [vizData, setVizData] = useState(null);
  const [loading, setLoading] = useState(false);

  const addMessage = (msg) => setMessages((m) => [...m, msg]);

  // –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å —á–µ—Ä–µ–∑ API. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–∫—Ç –ø—Ä–æ—Ñ–∏–ª—è –∏–ª–∏ null.
  const fetchProfileByIIN = async (iin) => {
    try {
      const url = `/api/profiles?iin=${iin}`;
      const res = await fetch(url);
      if (!res.ok) throw new Error("no-api");
      const json = await res.json();
      // –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã –æ—Ç–≤–µ—Ç–∞
      if (Array.isArray(json) && json.length) return json[0];
      if (json.data && Array.isArray(json.data)) return json.data[0];
      return json;
    } catch (err) {
      return null;
    }
  };

  const handleUserQuery = async (text) => {
    const trimmed = text.trim();
    if (!trimmed) return;

    addMessage({ sender: "user", text: trimmed });
    setLoading(true);
    setVizData(null);
    setVizType(null);

    const lower = trimmed.toLowerCase();

    // 1) –ü–æ–∏—Å–∫ –ø–æ –ò–ò–ù: 12 –ø–æ–¥—Ä—è–¥ —Ü–∏—Ñ—Ä
    const iinMatch = trimmed.match(/\b\d{12}\b/);
    if (iinMatch) {
      const iin = iinMatch[0];
      addMessage({ sender: "ai", text: `–ò—â—É –ø—Ä–æ—Ñ–∏–ª—å –ø–æ –ò–ò–ù ${iin}...` });

      const profile = await fetchProfileByIIN(iin);
      if (profile) {
        // –ï—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –ø—Ä–∏—à—ë–ª –∏–∑ API ‚Äî –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª—è, –µ—Å–ª–∏ –Ω–µ—Ç ‚Äî –ø—Ä–æ–±—É–µ–º –º–æ–∫–æ–≤—ã–µ –∏–º–µ–Ω–∞
        const name = profile.name || profile.fullName || "‚Äî";
        const region = profile.region || "‚Äî";
        const status = profile.status || "‚Äî";
        const arpu = profile.arpu || profile.avgCheck || null;
        const lastActivity = profile.lastActivity || profile.last_activity || "‚Äî";
        const products = profile.products || profile.products_list || [];

        const profileText = `–ü—Ä–æ—Ñ–∏–ª—å (–ò–ò–ù ${iin}):
–§–ò–û: ${name}
–†–µ–≥–∏–æ–Ω: ${region}
–°—Ç–∞—Ç—É—Å: ${status}
–°—Ä–µ–¥–Ω–∏–π –¥–æ—Ö–æ–¥ / –æ—Å—Ç–∞—Ç–æ–∫: ${arpu ? formatCurrency(arpu) : "‚Äî"}
–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: ${lastActivity};
–ü—Ä–æ–¥—É–∫—Ç—ã: ${products.length ? products.join(", ") : "‚Äî"}
–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: ${arpu && arpu > 700000 ? "–†–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ Private Banking" : "–ü—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∫—Ä–æ—Å—Å-–ø—Ä–æ–¥–∞–∂–∏ (–¥–µ–ø–æ–∑–∏—Ç / –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏)."}`;

        addMessage({ sender: "ai", text: profileText });

        // –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è: –µ—Å–ª–∏ –ø—Ä–∏—à–ª–∏ —Å–æ–±—ã—Ç–∏—è ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
        if (profile.events && profile.events.length) {
          const chart = profile.events.map((e, idx) => ({
            name: e.date,
            value: idx + 1,
          }));
          setVizType("line");
          setVizData(chart);
        } else {
          // –µ—Å–ª–∏ –Ω–µ—Ç —Å–æ–±—ã—Ç–∏–π, –ø–æ–∫–∞–∑–∞—Ç—å –º–æ–∫-–≥—Ä–∞—Ñ–∏–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –ø–æ –º–µ—Å—è—Ü–∞–º
          setVizType("line");
          setVizData([
            { name: "–ú–∞–π", value: 410000 },
            { name: "–ò—é–Ω", value: 380000 },
            { name: "–ò—é–ª", value: 420000 },
            { name: "–ê–≤–≥", value: 395000 },
            { name: "–°–µ–Ω", value: 360000 },
            { name: "–û–∫—Ç", value: 340000 },
          ]);
        }

        setLoading(false);
        return;
      }

      // –µ—Å–ª–∏ –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ API ‚Äî –≤–µ—Ä–Ω—É—Ç—å –º–æ–∫
      const mockText = `–ü—Ä–æ—Ñ–∏–ª—å (–ò–ò–ù ${iin}):
–§–ò–û: –ñ–∞–Ω–Ω–∞ –û–º–∞—Ä–æ–≤–∞
–ì–æ—Ä–æ–¥: –ê–ª–º–∞—Ç—ã
–î–æ—Ö–æ–¥: 780 000 ‚Ç∏/–º–µ—Å
–ê–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã: –¥–µ–±–µ—Ç–æ–≤–∞—è –∫–∞—Ä—Ç–∞, –∫—Ä–µ–¥–∏—Ç, –¥–µ–ø–æ–∑–∏—Ç "Growth"
–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: 2 –¥–Ω—è –Ω–∞–∑–∞–¥

–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –∫—Ä–æ—Å—Å-–ø—Ä–æ–¥–∞–∂—É ‚Äî –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã–π –¥–µ–±–µ—Ç + –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω—ã–π –æ—Ñ—Ñ–µ—Ä.`;
      addMessage({ sender: "ai", text: mockText });

      // –º–æ–∫-–≥—Ä–∞—Ñ–∏–∫ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π / –±–∞–ª–∞–Ω—Å–∞
      setVizType("line");
      setVizData([
        { name: "–ú–∞–π", value: 410000 },
        { name: "–ò—é–Ω", value: 380000 },
        { name: "–ò—é–ª", value: 420000 },
        { name: "–ê–≤–≥", value: 395000 },
        { name: "–°–µ–Ω", value: 360000 },
        { name: "–û–∫—Ç", value: 340000 },
      ]);

      setLoading(false);
      return;
    }

    // 2) RFM / —Å–µ–≥–º–µ–Ω—Ç—ã
    if (lower.includes("rfm") || lower.includes("rfm –º–∞—Ç—Ä–∏—Ü–∞") || lower.includes("rfm matrix")) {
      addMessage({ sender: "ai", text: "–ì–µ–Ω–µ—Ä–∏—Ä—É—é RFM-—Ä–∞–∑–±–∏–≤–∫—É..." });
      const rfm = [
        { name: "Champions", value: 420 },
        { name: "Loyal", value: 980 },
        { name: "Potential", value: 1500 },
        { name: "At Risk", value: 320 },
        { name: "Lost", value: 110 },
      ];
      setVizType("bar");
      setVizData(rfm);
      addMessage({
        sender: "ai",
        text:
          "–ò–Ω—Å–∞–π—Ç: —Å–µ–≥–º–µ–Ω—Ç 'At Risk' ‚Äî –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –¥–ª—è —É–¥–µ—Ä–∂–∞–Ω–∏—è (—Ä–∏—Å–∫ –æ—Ç—Ç–æ–∫–∞ –≤—ã—à–µ —Å—Ä–µ–¥–Ω–µ–≥–æ). –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –∫—Ä–µ–¥–∏—Ç–Ω—ã–µ –∫–∞–Ω–∏–∫—É–ª—ã –∏–ª–∏ –±–æ–Ω—É—Å—ã –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á–µ—Ç–∞.",
      });
      setLoading(false);
      return;
    }

    // 3) –î–µ–ø–æ–∑–∏—Ç—ã / –≤—ã—Ä—É—á–∫–∞ / –±–∞–ª–∞–Ω—Å—ã
    if (lower.includes("–¥–µ–ø–æ–∑–∏—Ç") || lower.includes("–¥–µ–ø–æ–∑–∏—Ç—ã") || lower.includes("–±–∞–ª–∞–Ω—Å") || lower.includes("–≤—ã—Ä—É—á–∫–∞")) {
      addMessage({ sender: "ai", text: "–ü–æ–∫–∞–∑—ã–≤–∞—é –¥–∏–Ω–∞–º–∏–∫—É –¥–µ–ø–æ–∑–∏—Ç–æ–≤ –ø–æ –≥–æ—Ä–æ–¥–∞–º..." });
      const deposits = [
        { name: "–ê—Å—Ç–∞–Ω–∞", value: 45000 },
        { name: "–ê–ª–º–∞—Ç—ã", value: 38000 },
        { name: "–ê—Ç—ã—Ä–∞—É", value: 17000 },
        { name: "–ö–∞—Ä–∞–≥–∞–Ω–¥–∞", value: 14000 },
        { name: "–®—ã–º–∫–µ–Ω—Ç", value: 12000 },
      ];
      setVizType("bar");
      setVizData(deposits);
      addMessage({
        sender: "ai",
        text: "–ò–Ω—Å–∞–π—Ç: –ê—Å—Ç–∞–Ω–∞ –∏ –ê–ª–º–∞—Ç—ã ‚Äî –ª–∏–¥–µ—Ä—ã –ø–æ –¥–µ–ø–æ–∑–∏—Ç–∞–º. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ç–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–∞–º–ø–∞–Ω–∏—è –¥–ª—è —Ä–µ–≥–∏–æ–Ω–æ–≤ —Å –Ω–µ–±–æ–ª—å—à–∏–º –æ—Ç—Ç–æ–∫–æ–º.",
      });
      setLoading(false);
      return;
    }

    // 4) –†–∏—Å–∫–∏ / –ø—Ä–æ—Å—Ä–æ—á–∫–∏
    if (lower.includes("—Ä–∏—Å–∫") || lower.includes("–¥–µ—Ñ–æ–ª—Ç") || lower.includes("–ø—Ä–æ—Å—Ä–æ—á–∫")) {
      addMessage({ sender: "ai", text: "–ê–Ω–∞–ª–∏–∑ —Ä–∏—Å–∫–æ–≤ ‚Äî —Ñ–æ—Ä–º–∏—Ä—É—é —Å–≤–æ–¥–∫—É..." });
      addMessage({
        sender: "ai",
        text:
          "–ò–Ω—Å–∞–π—Ç: —Ä–æ—Å—Ç –ø—Ä–æ—Å—Ä–æ—á–µ–∫ –≤ —Å–µ–≥–º–µ–Ω—Ç–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª—å—Å–∫–∏—Ö –∫—Ä–µ–¥–∏—Ç–æ–≤ +7% –∑–∞ –º–µ—Å—è—Ü. –û—Å–Ω–æ–≤–Ω—ã–µ –¥—Ä–∞–π–≤–µ—Ä—ã: —Å–Ω–∏–∂–µ–Ω–∏–µ –¥–æ—Ö–æ–¥–∞ –≤ —Ä–µ–≥–∏–æ–Ω–∞—Ö X –∏ Y. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω—ã–µ –∑–≤–æ–Ω–∫–∏ –∏ —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –¥–ª—è –∫–ª–∏–µ–Ω—Ç–æ–≤ —Å –ø–µ—Ä–µ–≥—Ä—É–∑–∫–æ–π –ø–ª–∞—Ç–µ–∂–µ–π.",
      });
      setLoading(false);
      return;
    }

    // 5) –û–±—â–∏–µ –∏–Ω—Å–∞–π—Ç—ã / —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    if (lower.includes("–∏–Ω—Å–∞–π—Ç") || lower.includes("—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü") || lower.includes("—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")) {
      addMessage({ sender: "ai", text: "–ò—â—É —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã–µ –∏–Ω—Å–∞–π—Ç—ã..." });
      addMessage({
        sender: "ai",
        text:
          "üìå –ò–Ω—Å–∞–π—Ç: –∫–ª–∏–µ–Ω—Ç—ã —Å –æ—Å—Ç–∞—Ç–∫–æ–º < 50k ‚Ç∏ –∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–æ–Ω–Ω–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é < 2/–º–µ—Å –∏–º–µ—é—Ç –ø–æ–≤—ã—à–µ–Ω–Ω—ã–π —Ä–∏—Å–∫ —É—Ö–æ–¥–∞. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –º–∏–∫—Ä–æ–∫—Ä–µ–¥–∏—Ç —Å –∫—Ä–æ—Å—Å-–ø—Ä–æ–¥–∞–∂–µ–π –∏ cashback.",
      });
      setLoading(false);
      return;
    }

    // 6) –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é ‚Äî –ø–æ–¥—Å–∫–∞–∑–∫–∞
    addMessage({
      sender: "ai",
      text:
        "–Ø –º–æ–≥—É: –ø–æ–∫–∞–∑–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –ø–æ –ò–ò–ù (–≤–≤–µ–¥–∏—Ç–µ 12 —Ü–∏—Ñ—Ä –ò–ò–ù), RFM-—Ä–∞–∑–±–∏–≤–∫—É, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–µ–ø–æ–∑–∏—Ç–æ–≤/–±–∞–ª–∞–Ω—Å–æ–≤, –∏–Ω—Å–∞–π—Ç—ã –ø–æ —Ä–∏—Å–∫–∞–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –ò–ò–ù 950618300142' –∏–ª–∏ '–ü–æ–∫–∞–∂–∏ RFM'.",
    });
    setLoading(false);
  };

  const onSend = async (e) => {
    e?.preventDefault();
    if (!input.trim()) return;
    await handleUserQuery(input);
    setInput("");
  };

  return (
    <div className="p-6 space-y-6 flex flex-col h-full">
      <h1 className="text-2xl font-semibold text-gray-800 flex items-center gap-2">AI Banking Assistant</h1>

      <Card className="flex-1 overflow-hidden shadow-sm border-gray-200 flex flex-col">
        <CardContent className="flex-1 overflow-y-auto space-y-4 p-6 bg-white">
          {messages.map((m, i) => (
            <TextBubble key={i} sender={m.sender} text={m.text} />
          ))}

          {loading && (
            <div className="flex justify-center py-4 text-sm text-gray-500">
              <Loader2 className="animate-spin mr-2" /> –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...
            </div>
          )}
        </CardContent>

        <div className="p-4 border-t bg-gray-50">
          <form onSubmit={onSend} className="flex gap-2">
            <Input
              placeholder="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –ò–ò–ù (12 —Ü–∏—Ñ—Ä)..."
              value={input}
              onChange={(e) => setInput(e.target.value)}
              onKeyDown={(e) => e.key === "Enter" && onSend(e)}
              className="flex-1"
            />
            <Button onClick={onSend} className="bg-[#FFB800] hover:bg-[#e5a700] text-white">
              <SendHorizonal size={18} />
            </Button>
          </form>
        </div>
      </Card>

      {/* –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è */}
      {vizData && vizType === "line" && (
        <Card className="shadow-sm">
          <CardContent className="p-6">
            <h3 className="text-lg font-medium mb-4">–ì—Ä–∞—Ñ–∏–∫ (–ª–∏–Ω–µ–π–Ω—ã–π)</h3>
            <ResponsiveContainer width="100%" height={250}>
              <LineChart data={vizData}>
                <XAxis dataKey="name" />
                <YAxis />
                <Tooltip />
                <Line type="monotone" dataKey="value" stroke="#FFB800" strokeWidth={2} dot={{ r: 3 }} />
              </LineChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>
      )}

      {vizData && vizType === "bar" && (
        <Card className="shadow-sm">
          <CardContent className="p-6">
            <h3 className="text-lg font-medium mb-4">–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ (–±–∞—Ä)</h3>
            <ResponsiveContainer width="100%" height={250}>
              <BarChart data={vizData}>
                <XAxis dataKey="name" />
                <YAxis />
                <Tooltip />
                <Bar dataKey="value" fill="#FFB800" radius={[6, 6, 0, 0]} />
              </BarChart>
            </ResponsiveContainer>
          </CardContent>
        </Card>
      )}
    </div>
  );
}
